{"version":3,"sources":["components/Navigation/Navigation.js","components/MainSection/NavigationButton/NavigationButton.js","components/MainSection/MainSection.js","components/StartSection/ScrollDown/ScrollDown.js","services/authService.js","components/ErrorNotification/ErrorNotification.js","context/OpenModalContext.js","components/LoginForm/LoginForm.js","components/Modal/Modal.js","components/StartSection/StartSection.js","components/RegisterSection/RegisterBtn/RegisterBtn.js","validation/validation.js","components/RegisterSection/RegisterForm/RegisterForm.js","components/RegisterSection/RegisterSection.js","components/Footer/Footer.js","components/Home/Home.js","services/workoutService.js","components/CreateWorkout/ExerciseForm/ExerciseForm.js","components/CreateWorkout/CreateWorkout.js","components/Workouts/Year/Year.js","components/Workouts/Month/Month.js","components/Workouts/Day/Day.js","components/Workouts/CurrentWorkout/CurrentWorkout.js","components/Workouts/Workouts.js","components/Profile/ChangeInfoForm/ChangeInfoForm.js","components/Profile/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","state","menu","onHamburgerClickHandler","bind","onCloseBtnClickHandler","e","window","scrollY","document","querySelector","classList","add","remove","addEventListener","this","handleScroll","setState","loggedIn","className","to","src","alt","onClick","activeClassName","handleOpenModal","Component","NavigationButton","linkTo","text","highlighted","MainSection","ScrollDown","handleScrollDown","url","updateData","data","userId","fetch","method","headers","body","JSON","stringify","ErrorNotification","message","OpenModalContext","React","createContext","LoginForm","handleLogin","useContext","useState","errorMessage","setErrorMessage","display","setDisplay","displayPassword","setDisplayPassword","email","setEmail","onSubmit","preventDefault","target","password","value","then","res","json","type","errorMsg","localStorage","setItem","user","passwordRep","resetPassword","catch","err","checkEmail","name","placeholder","Modal","handleClose","show","children","divClassName","StartSection","openModal","modal","setModal","containerClassName","useEffect","RegisterBtn","handleOpen","nameValidation","input","fieldName","length","validated","numberValidation","test","Number","RegisterForm","userInfo","setUserInfo","step","setStep","history","useHistory","inputValidation","username","usernameValidated","uname","emailValidated","emailValidation","passwordValidated","pass","passwordRepValidated","every","age","weight","height","ageValidated","heightValidated","weightValidated","register","Object","assign","push","htmlFor","id","RegisterSection","forwardRef","ref","Footer","Home","regSection","useRef","current","scrollIntoView","behavior","ExerciseForm","workoutId","reps","setData","finishedWorkout","setFinishedWorkout","handleChange","index","list","handleAddRow","exerciseName","isValidData","item","toLowerCase","exerciseWeightValidation","pushExercise","exerciseSets","map","row","i","onChange","splice","handleRemoveRow","CreateWorkout","formSubmitted","setFormSubmitted","workoutIdParam","setWorkoutIdParam","getItem","console","log","workoutName","personalWeight","dataBody","createWorkout","parse","Year","year","clicked","setClicked","Month","month","Day","day","includes","CurrentWorkout","workout","currentExercise","setCurrentExercise","date","Date","getDate","getMonth","getFullYear","exercises","exercise","sets","set","Workouts","workouts","setWorkouts","currentWorkout","setCurrentWorkout","getWorkotus","workoutsData","months","entries","monthName","dates","_id","ChangeInfoForm","info","userEmail","setUserEmail","personalInfoObject","setPersonalInfoObject","onEmailChangeHandler","onPersonalInfoChangeHandler","obj","newObj","executed","oldPassword","newPassword","newPasswordRep","Profile","userData","App","setloggedIn","setOpenModal","bool","path","exact","Provider","component","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d317ce18.chunk.js","sourcesContent":["import './Navigation.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            menu: false,\r\n        }\r\n\r\n        this.onHamburgerClickHandler = this.onHamburgerClickHandler.bind(this);\r\n        this.onCloseBtnClickHandler = this.onCloseBtnClickHandler.bind(this);\r\n    }\r\n\r\n    handleScroll(e) {\r\n        if(window.scrollY > 20) {\r\n            document.querySelector('.nav').classList.add('nav-scroll');\r\n        } else {\r\n            document.querySelector('.nav').classList.remove('nav-scroll');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll)\r\n    }\r\n\r\n    onHamburgerClickHandler(e) {\r\n        this.setState({menu: true});\r\n    }\r\n\r\n    onCloseBtnClickHandler(e) {\r\n        this.setState({menu: false});\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        if(this.props.loggedIn) {\r\n            return (\r\n                <nav className=\"nav\">\r\n                    <NavLink to=\"/\" className=\"nav-logo\"><img src=\"/logoD.png\" alt=\"Logo\" onClick={this.onCloseBtnClickHandler}/></NavLink>\r\n\r\n                        <div className=\"hamburger-container\" onClick={this.onHamburgerClickHandler}>\r\n                            <div className=\"hamburger\"></div>\r\n                        </div>\r\n\r\n                        <div className={`menu ${this.state.menu ? 'menu-show' : 'menu-hide'}`}>\r\n                            <div className=\"close-btn-container\" onClick={this.onCloseBtnClickHandler}>\r\n                                <div className=\"close-btn\"></div>\r\n                            </div>\r\n                            <NavLink to=\"/my-workouts\" activeClassName=\"nav-link-active\" className=\"nav-link\" onClick={this.onCloseBtnClickHandler}>my workouts</NavLink>\r\n                            <NavLink to=\"/create-workout\" activeClassName=\"nav-link-active\" className=\"nav-link\" onClick={this.onCloseBtnClickHandler}>create workout</NavLink>\r\n                            <NavLink to=\"/profile\" activeClassName=\"nav-link-active\" className=\"nav-link\" onClick={this.onCloseBtnClickHandler}>profile</NavLink>\r\n                            <NavLink to=\"/logout\" className=\"btn-red-small btn-align-down\" onClick={this.onCloseBtnClickHandler}>logout</NavLink>\r\n                        </div>\r\n                </nav>\r\n            )\r\n        } else {\r\n            \r\n\r\n            return (\r\n                <nav className=\"nav\">\r\n                   <NavLink to=\"/\" className=\"nav-logo\"><img src=\"/logoD.png\" alt=\"Logo\"/></NavLink>\r\n                    <div className=\"right-section\">\r\n                        <button className=\"btn-red-small btn-login\" onClick={this.props.handleOpenModal}>login</button>\r\n                    </div>\r\n\r\n                    \r\n                </nav>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nexport default Navigation;","import './NavigationButton.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavigationButton = ({\r\n    linkTo,\r\n    text,\r\n    highlighted\r\n}) => {\r\n    return (\r\n        <Link to={linkTo} className=\"main-button\">\r\n            <div className=\"main-button-text\">\r\n                {text} <span className=\"text-red\">{highlighted}</span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default NavigationButton;","import './MainSection.css';\r\n\r\nimport NavigationButton from './NavigationButton';\r\n\r\nconst MainSection = () => {\r\n    return (\r\n        <section className=\"main-section\">\r\n            <NavigationButton linkTo=\"/create-workout\" text=\"create a\" highlighted=\"workout\" />\r\n            <NavigationButton linkTo=\"/my-workouts\" text=\"my\" highlighted=\"workouts\" />\r\n            <NavigationButton linkTo=\"/\" text=\"check your\" highlighted=\"progress\" />\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default MainSection;","import './ScrollDown.css';\r\n\r\nconst ScrollDown = ({\r\n    handleScrollDown\r\n}) => {\r\n    return (\r\n        <div className=\"scroll-down-container\">\r\n            <img src=\"/scroll-down.png\" alt=\"Scroll down icon\" className=\"scroll-down-icon\" onClick={handleScrollDown}/>\r\n            <span className=\"scroll-down-text\" onClick={handleScrollDown}>register</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ScrollDown;","const url = `https://evening-coast-86301.herokuapp.com/auth`;\r\n\r\nexport const register = data => {\r\n    return fetch(`${url}/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\n\r\nexport const login = data => {\r\n    return fetch(`${url}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n}\r\n\r\nexport const updateData = (data, userId) => {\r\n    return fetch(`${url}/change-user-data/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n};\r\n\r\nexport const checkEmail = email => {\r\n    return fetch(`${url}/check-email`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({email}),\r\n    })\r\n}\r\n\r\nexport const resetPassword = data => {\r\n    return fetch(`${url}/reset-password`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data),\r\n    })\r\n}\r\n\r\nexport const resetProgress = userId => {\r\n    return fetch(`${url}/reset-progress/${userId}`);\r\n}","import './ErrorNotification.css';\r\n\r\nconst ErrorNotification = ({\r\n    message\r\n}) => {\r\n    if(!message) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"error-message\">{message}</div>\r\n    )\r\n};\r\n\r\nexport default ErrorNotification;","import React from 'react';\r\n\r\nconst OpenModalContext = React.createContext();\r\n\r\nexport default OpenModalContext;","import { useState, useContext } from 'react';\r\n\r\nimport { login, checkEmail, resetPassword } from '../../services/authService';\r\n\r\nimport './LoginForm.css';\r\nimport ErrorNotification from '../ErrorNotification';\r\nimport OpenModalContext from '../../context/OpenModalContext';\r\n\r\nconst LoginForm = () => {\r\n    const context = useContext(OpenModalContext);\r\n    const handleLogin = context.handleLogin;\r\n\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [display, setDisplay] = useState(true);\r\n    const [displayPassword, setDisplayPassword] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n\r\n    const handleLoginFormSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (display) {\r\n            const { email, password } = e.target;\r\n            login({ email: email.value, password: password.value })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.type === 'error') {\r\n                        setErrorMessage(res.message.errorMsg);\r\n                    } else {\r\n                        setErrorMessage(null)\r\n                        localStorage.setItem('user', JSON.stringify(res.user));\r\n                        handleLogin(true);\r\n                    }\r\n                });\r\n        } else {\r\n            if (displayPassword) {\r\n                const { password, passwordRep } = e.target;\r\n\r\n                if (password.value !== passwordRep.value) {\r\n                    setErrorMessage('Passwords doesn\\'t match!');\r\n                } else {\r\n                    resetPassword({ email, password: password.value })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            if (res.type === 'error') {\r\n                                setErrorMessage(res.message.errorMsg);\r\n                            } else {\r\n                                setErrorMessage(null)\r\n                                localStorage.setItem('user', JSON.stringify(res.user));\r\n                                handleLogin(true);\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            setErrorMessage(err.message.errorMsg);\r\n                        })\r\n                }\r\n            } else {\r\n                const { email } = e.target;\r\n\r\n                checkEmail(email.value)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.type === 'error') {\r\n                            setErrorMessage(res.message.errorMsg);\r\n                        } else {\r\n                            setErrorMessage(null);\r\n                            setEmail(email.value);\r\n                            setDisplayPassword(true);\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        setErrorMessage(err.message.errorMsg);\r\n                    })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form className=\"login-form\" onSubmit={handleLoginFormSubmit}>\r\n            {display ?\r\n                <>\r\n                    <input type=\"email\" name=\"email\" className=\"login-form-input\" placeholder=\"Type your email here...\" />\r\n                    <input type=\"password\" name=\"password\" className=\"login-form-input\" placeholder=\"Type your password here...\" />\r\n                    <input type=\"submit\" value=\"login\" className=\"login-form-btn\" />\r\n                    <ErrorNotification message={errorMessage} />\r\n                    <span className=\"login-form-text\" onClick={() => setDisplay(false)}>Forgotten password? Click here!</span></>\r\n                :\r\n                <>\r\n                    <h3 className=\"login-form-heading\">Type your email and we'll reset your password</h3>\r\n                    {displayPassword ?\r\n                        <>\r\n                            <input type=\"password\" name=\"password\" className=\"login-form-input\" placeholder=\"Type your new password here...\" />\r\n                            <input type=\"password\" name=\"passwordRep\" className=\"login-form-input\" placeholder=\"Type your new password here...\" />\r\n                        </>\r\n                        :\r\n                        <input type=\"email\" name=\"email\" className=\"login-form-input\" />\r\n                    }\r\n\r\n                    <input type=\"submit\" value=\"reset\" className=\"login-form-btn\" />\r\n                    <ErrorNotification message={errorMessage} />\r\n                </>}\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n","import './Modal.css';\r\n\r\nconst Modal = ({\r\n    handleClose,\r\n    show,\r\n    children,\r\n}) => {\r\n    const divClassName = show ? 'show-modal' : 'hide-modal';\r\n\r\n    return (\r\n        <div className={`modal ${divClassName}`}>\r\n            <span className='modal-close-btn' onClick={handleClose}>&#10005;</span>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import { useState, useEffect, useContext } from 'react';\r\n\r\nimport './StartSection.css';\r\n\r\nimport ScrollDown from './ScrollDown';\r\nimport LoginForm from '../LoginForm/LoginForm';\r\nimport Modal from '../Modal';\r\n\r\nimport OpenModalContext from '../../context/OpenModalContext';\r\n\r\nconst StartSection = ({\r\n    handleScrollDown,\r\n}) => {\r\n    const openModal = useContext(OpenModalContext);\r\n\r\n    const [modal, setModal] = useState(openModal);\r\n\r\n    const containerClassName = modal ? 'modal-container-show' : 'modal-container-hide';\r\n\r\n    useEffect(() => {\r\n        setModal(openModal);\r\n    }, [openModal])\r\n    \r\n    return (\r\n        <section className=\"start-section\">\r\n            <ScrollDown handleScrollDown={handleScrollDown}/>\r\n            {openModal ? <div className={`modal-container ${containerClassName}`}>\r\n                    <Modal show={modal} handleClose={() => setModal(false)}>\r\n                        <LoginForm />\r\n                    </Modal>\r\n                </div> : null}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StartSection;","import './RegisterBtn.css';\r\n\r\nconst RegisterBtn = ({\r\n    handleOpen\r\n}) => {\r\n    return (\r\n        <button onClick={handleOpen} className=\"register-btn\">register now</button>\r\n    )\r\n}\r\n\r\nexport default RegisterBtn;","export const nameValidation = (input, fieldName) => {\r\n    const minLength = 3;\r\n\r\n    if(input.length < minLength) {\r\n        return {validated: false, errorMsg: `${fieldName} must be at least ${minLength} characters!` };\r\n    }\r\n\r\n    return {validated: true, input};\r\n}\r\n\r\nexport const numberValidation = (input, fieldName) => {\r\n    const min = 0;\r\n    const regEx = /^\\d+$/;\r\n\r\n    if(!regEx.test(input)) {\r\n        return {validated: false, errorMsg: `${fieldName} must be a number!` };\r\n    } else {\r\n        if(Number(input) < min) {\r\n            return {validated: false, errorMsg: `${fieldName} can't be a negative number!` };\r\n        }\r\n    }\r\n\r\n    return {validated: true, input};\r\n}\r\n\r\nexport const exerciseWeightValidation = input => {\r\n    const min = 0;\r\n    const regEx = /^\\d+$/;\r\n\r\n    if(regEx.test(input)) {\r\n        if(Number(input) < min) {\r\n            return {validated: false, errorMsg: `Exercise weight must be at least ${min} kg/lbs!` };\r\n        }\r\n    } else {\r\n        if(input.toLowerCase() !== 'bodyweight') {\r\n            return {validated: false, errorMsg: `Exercise weight must be either BODYWEIGHT or a number!` };\r\n        }\r\n    }\r\n\r\n    return {validated: true, input};\r\n}\r\n\r\nexport const emailValidation = email => {\r\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if(!email || email === '') {\r\n        return { validated: false, errorMsg: `Email field must be filled!` };\r\n    }\r\n\r\n    if(!regex.test(email)) {\r\n        return { validated: false, errorMsg: 'Invalid email!' }\r\n    }\r\n\r\n    return {validated: true, input: email};\r\n};\r\n\r\nexport const usernameValidation = uname => {\r\n    const minLength = 5;\r\n    const regex = /^[a-zA-Z0-9]+$/;\r\n\r\n    if(!uname || uname === '') {\r\n        return { validated: false, errorMsg: `Username field must be filled!` };\r\n    }\r\n\r\n    if(uname.length < minLength) {\r\n        return { validated: false, errorMsg: `Username field should be at least ${minLength} charachters long!` };\r\n    }\r\n\r\n    if(!regex.test(uname)) {\r\n        return { validated: false,  errorMsg: 'Username should contain only english letters and numbers!' };\r\n    }\r\n\r\n    return {validated: true, input: uname};\r\n};\r\n\r\nexport const passwordValidation = pass => {\r\n    const minLength = 8;\r\n\r\n    if(!pass || pass === '') {\r\n        return { validated: false, errorMsg: `Password field must be filled!` };\r\n    }\r\n\r\n    if(pass.length < minLength) {\r\n        return { validated: false, errorMsg: `Password field should be at least ${minLength} charachters long!` };\r\n    }\r\n\r\n    return {validated: true, input: pass};\r\n}","import './RegisterForm.css';\r\n\r\nimport { usernameValidation, passwordValidation, emailValidation, numberValidation } from '../../../validation/validation';\r\n\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ErrorNotification from '../../ErrorNotification';\r\nimport { register } from '../../../services/authService';\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [step, setStep] = useState(1);\r\n    const history = useHistory();\r\n\r\n    const inputValidation = input => {\r\n        if (!input.validated) {\r\n            return setErrorMessage(input.errorMsg);\r\n        } else {\r\n            setErrorMessage(null);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleRegisterFormSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (step === 1) {\r\n            const { username, email, password, passwordRep } = e.target;\r\n\r\n            const usernameValidated = usernameValidation(username.value);\r\n            const emailValidated = emailValidation(email.value);\r\n            const passwordValidated = passwordValidation(password.value);\r\n            const passwordRepValidated = passwordRep.value;\r\n\r\n            const inputsArr = [usernameValidated, emailValidated, passwordValidated];\r\n\r\n            const inputsValidated = inputsArr.every(inputValidation);\r\n\r\n            if (inputsValidated) {\r\n                if (passwordValidated.input !== passwordRepValidated) {\r\n                    setErrorMessage('Passwords doesn\\'t match!')\r\n                } else {\r\n                    setErrorMessage(null);\r\n\r\n                    setUserInfo({\r\n                        username: usernameValidated.input,\r\n                        email: emailValidated.input,\r\n                        password: passwordValidated.input,\r\n                        passwordRep: passwordRepValidated\r\n                    })\r\n                    setStep(2);\r\n                }\r\n            }\r\n\r\n        } else {\r\n            const { age, weight, height } = e.target;\r\n\r\n            const ageValidated = numberValidation(age.value, 'Age');\r\n            const heightValidated = numberValidation(height.value, 'Height');\r\n            const weightValidated = numberValidation(weight.value, 'Weight');\r\n\r\n            const inputsArr = [ageValidated, weightValidated, heightValidated];\r\n\r\n            const inputsValidated = inputsArr.every(inputValidation);\r\n\r\n            if(inputsValidated) {\r\n                const data = Object.assign(userInfo, \r\n                    {\r\n                        age: ageValidated.input, \r\n                        weight: weightValidated.input,\r\n                        height: heightValidated.input\r\n                    })\r\n\r\n                register(data)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if(res.message.errorMsg) {\r\n                            setStep(1);\r\n                            setErrorMessage(res.message.errorMsg);\r\n                        } else {\r\n                            localStorage.setItem('user', JSON.stringify(res.user));\r\n                            history.push('/');\r\n                        }\r\n                         \r\n                    })\r\n                    \r\n            }\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <form className='register-form' onSubmit={handleRegisterFormSubmit}>\r\n            {step === 1 && <div className=\"inputs-container\">\r\n                <h2 className=\"register-heading\">Register</h2>\r\n\r\n                <label htmlFor=\"username\" className=\"register-label\">Username:</label>\r\n                <input type=\"text\" name=\"username\" id=\"username\" className=\"register-input\" />\r\n\r\n                <label htmlFor=\"email\" className=\"register-label\">Email:</label>\r\n                <input type=\"email\" name=\"email\" id=\"email\" className=\"register-input\" />\r\n\r\n                <label htmlFor=\"password\" className=\"register-label\">Password:</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" className=\"register-input\" />\r\n\r\n                <label htmlFor=\"passwordRep\" className=\"register-label\">Repeat password:</label>\r\n                <input type=\"password\" name=\"passwordRep\" id=\"passwordRep\" className=\"register-input\" />\r\n\r\n                <div className=\"register-error-container\">\r\n                    <ErrorNotification message={errorMessage} />\r\n                </div>\r\n            </div>}\r\n\r\n            {step === 2 && <div className=\"inputs-container\">\r\n                <h2 className=\"register-heading\">Register</h2>\r\n\r\n                <label htmlFor=\"age\" className=\"register-label\">Age:</label>\r\n                <input type=\"number\" name=\"age\" id=\"age\" className=\"register-input\" />\r\n\r\n                <label htmlFor=\"height\" className=\"register-label\">Height:</label>\r\n                <input type=\"number\" name=\"height\" id=\"height\" placeholder=\"Your height in cm...\" className=\"register-input\" />\r\n\r\n                <label htmlFor=\"weight\" className=\"register-label\">Personal weight:</label>\r\n                <input type=\"number\" name=\"weight\" id=\"weight\" placeholder=\"Your weight in kg...\" className=\"register-input\" />\r\n\r\n                <div className=\"register-error-container\">\r\n                    <ErrorNotification message={errorMessage} />\r\n                </div>\r\n            </div>}\r\n\r\n            <div className=\"button-container\">\r\n                <button type=\"submit\" className='register-btn register-btn-wide'>{step === 1 ? 'next' : 'go'}</button>\r\n            </div>\r\n\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default RegisterForm;","import { useState } from 'react';\r\nimport React from 'react';\r\n\r\nimport './RegisterSection.css';\r\n\r\nimport RegisterBtn from './RegisterBtn';\r\nimport Modal from '../Modal';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nconst RegisterSection = React.forwardRef((props, ref) => {\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const containerClassName = modal ? 'modal-container-show' : 'modal-container-hide';\r\n\r\n    return (\r\n        <section ref={ref} className=\"reg-section\">\r\n                <div className=\"description-container\">    \r\n                    <p className=\"description-text\">\r\n                        Power<span className=\"description-logo\">Up</span> is a personal fitness assistant, which will make your fitness journey more productive by tracking your progress. In order to use it, you have to register, so follow the button below. If you like it, please share my app with your friends!\r\n                    </p>\r\n                </div>\r\n\r\n                <RegisterBtn handleOpen={() => setModal(true)} />\r\n\r\n                <div className={`modal-container ${containerClassName}`}>\r\n                    <Modal show={modal} handleClose={() => setModal(false)}>\r\n                        <RegisterForm />\r\n                    </Modal>\r\n                </div>\r\n        </section>\r\n    )\r\n});\r\n\r\nexport default RegisterSection;","import './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div>Power<span className=\"text-red\">Up</span> &copy; 20<span className=\"text-red\">21</span></div>\r\n            <div>Developed by <span className=\"text-red text-uppercase\">Rusev</span></div>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","import { useRef } from 'react';\r\n\r\nimport MainSection from '../MainSection';\r\nimport StartSection from '../StartSection';\r\nimport RegisterSection from '../RegisterSection';\r\nimport Footer from '../Footer';\r\n\r\nconst Home = ({\r\n    loggedIn,\r\n}) => {\r\n    const regSection = useRef();\r\n\r\n    const handleScrollDown = () => {\r\n        regSection.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    if(loggedIn) {\r\n        return (\r\n            <div className=\"fade-in\">\r\n                <MainSection />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"fade-in\">\r\n                <StartSection handleScrollDown={handleScrollDown} />\r\n                <RegisterSection ref={regSection}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Home;","const url = `https://evening-coast-86301.herokuapp.com/workouts`;\r\n\r\nexport const createWorkout = (data, userId) => {\r\n    const dataBody = {\r\n        workoutName: data.workoutName,\r\n        personalWeight: data.personalWeight,\r\n    }\r\n\r\n    return fetch(`${url}/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(dataBody)\r\n    });\r\n}\r\n\r\nexport const pushExercise = data => {\r\n    return fetch(`${url}/add-exercise`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data),\r\n    })\r\n}\r\n\r\nexport const getWorkotus = userId => {\r\n    return fetch(`${url}/get-workouts/${userId}`);\r\n}","import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { nameValidation, exerciseWeightValidation, numberValidation} from '../../../validation/validation';\r\nimport { pushExercise } from '../../../services/workoutService';\r\n\r\nimport ErrorNotification from '../../ErrorNotification';\r\n\r\nimport './ExerciseForm.css';\r\n\r\nconst ExerciseForm = ({\r\n    workoutId\r\n}) => {\r\n    const [data, setData] = useState([\r\n        { reps: 0, weight: 0 },\r\n    ])\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [finishedWorkout, setFinishedWorkout] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onExerciseFormSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const exerciseName = nameValidation(e.target.exerciseName.value, 'Exercise name');\r\n        const isValidData = data.every(item => {\r\n            if(!numberValidation(item.reps).validated) {\r\n                return false;\r\n            }\r\n\r\n            if(!exerciseWeightValidation(item.weight).validated) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        if(exerciseName.validated) {\r\n            if(isValidData) {\r\n                const dataBody = {\r\n                    workoutId: workoutId,\r\n                    exerciseName: exerciseName.input,\r\n                    exerciseSets: data,\r\n                }\r\n\r\n                pushExercise(dataBody)\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        if(finishedWorkout) {\r\n                            history.push('/');\r\n                        } else {\r\n                            e.target.exerciseName.value = '';\r\n                            setData([{reps: 0, weight: 0}]);\r\n                        }\r\n                    });\r\n                    \r\n            } else {\r\n                setErrorMessage('Invalid weight / reps value! (For the weight you can put number or \"bodyweight\")');\r\n            }\r\n        } else {\r\n            setErrorMessage(exerciseName.errorMsg);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n\r\n        const list = [...data];\r\n        \r\n        list[index][name] = value;\r\n\r\n        setData(list);\r\n    }\r\n\r\n    const handleAddRow = () => {\r\n        setData([...data, { reps: 0, weight: 0 }]);\r\n    }\r\n\r\n    const handleRemoveRow = index => {\r\n        const list = [...data];\r\n        \r\n        list.splice(index, 1);\r\n\r\n        setData(list);\r\n    }\r\n\r\n    return (\r\n        <form className=\"create-form\" onSubmit={onExerciseFormSubmitHandler}>\r\n            <h1 className=\"create-form-heading\">Add an <span className=\"text-red\">exercise</span></h1>\r\n\r\n            <label htmlFor=\"exerciseName\" className=\"create-form-label margin-top-20\">Exercise name:</label>\r\n            <input type=\"text\" name=\"exerciseName\" id=\"exerciseName\" className=\"create-form-input\" />\r\n\r\n            {data.map((row, i) => {\r\n                return (\r\n                    <div key={i} className=\"inputs-row\">\r\n                        <span className=\"exercise-form-span\">Set {i + 1}</span>\r\n\r\n                        <label htmlFor=\"reps\" className=\"create-form-label\">Reps:</label>\r\n                        <input \r\n                            type=\"number\" \r\n                            name=\"reps\"\r\n                            id=\"reps\"\r\n                            className=\"create-form-input margin-left-10\"\r\n                            value={row.reps}\r\n                            onChange={e => handleChange(e, i)}\r\n                        />\r\n\r\n                        <label htmlFor=\"weight\" className=\"create-form-label margin-left-20\">Weight:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"weight\"\r\n                            id=\"weight\"\r\n                            className=\"create-form-input margin-left-10\"\r\n                            value={row.weight}\r\n                            onChange={e => handleChange(e, i)}\r\n                        />\r\n\r\n                        {data.length - 1 === i && <input\r\n                            type=\"button\"\r\n                            onClick={handleAddRow}\r\n                            value=\"Add set\"\r\n                            className=\"exercise-form-btn\"\r\n                        />}\r\n\r\n                        {data.length !== 1 && <input\r\n                            type=\"button\"\r\n                            onClick={() => handleRemoveRow(i)} \r\n                            value=\"Remove set\" \r\n                            className=\"exercise-form-btn\"\r\n                        />}\r\n                    </div>\r\n                )\r\n            })}\r\n            \r\n            <div className=\"btns-row\">\r\n                <input type=\"submit\" value=\"Next exercise\" className=\"create-form-btn\"/>\r\n                <input type=\"submit\" onClick={() => setFinishedWorkout(true)} value=\"Finish workout!\" className=\"create-form-btn filled-btn\"/>\r\n            </div>\r\n\r\n            <ErrorNotification message={errorMessage}/>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default ExerciseForm;","import { useState } from 'react';\r\n\r\nimport './CreateWorkout.css';\r\n\r\nimport { nameValidation, numberValidation } from '../../validation/validation';\r\nimport ExerciseForm from './ExerciseForm';\r\nimport ErrorNotification from '../ErrorNotification';\r\n\r\nimport { createWorkout } from '../../services/workoutService';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst CreateWorkout = () => {\r\n\r\n    const [formSubmitted, setFormSubmitted] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [workoutIdParam, setWorkoutIdParam] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    if(!localStorage.getItem('user')) {\r\n        history.push('/');\r\n        return null;\r\n    }\r\n\r\n    const onCreateFormSubmitHandler = e => {\r\n        e.preventDefault();\r\n        console.log(e.target);\r\n\r\n        const workoutName = nameValidation(e.target.name.value, 'Workout name');\r\n        const personalWeight = numberValidation(e.target.personalWeight.value, 'Personal weight');\r\n\r\n        if(!workoutName.validated) {\r\n            setErrorMessage(workoutName.errorMsg);\r\n        } else {\r\n            if(!personalWeight.validated) {\r\n                setErrorMessage(personalWeight.errorMsg);\r\n            }\r\n        }\r\n\r\n        if(workoutName.validated && personalWeight.validated) {\r\n            setErrorMessage('');\r\n\r\n            const data = {\r\n                workoutName: workoutName.input, \r\n                personalWeight: personalWeight.input\r\n            }\r\n\r\n            const userId = JSON.parse(localStorage.getItem('user')).id;\r\n\r\n            createWorkout(data, userId)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setWorkoutIdParam(data.workoutId);\r\n                    setFormSubmitted(true);\r\n                })\r\n                .catch(err => setErrorMessage(err.errorMsg));\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-form-container fade-in\">\r\n            <form className={`create-form  ${formSubmitted ? 'hide-create-form' : ''}`} onSubmit={onCreateFormSubmitHandler}>\r\n                <h1 className=\"create-form-heading\">Create a <span className=\"text-red\">workout</span></h1>\r\n\r\n                <label htmlFor=\"name\" className=\"create-form-label margin-top-20\">Workout name:</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" className=\"create-form-input\" />\r\n\r\n                <label htmlFor=\"personalWeight\" className=\"create-form-label margin-top-20\">Your weight:</label>\r\n                <input type=\"number\" name=\"personalWeight\" id=\"personalWeight\" className=\"create-form-input\" />\r\n\r\n                <input type=\"submit\" value=\"start\" className=\"create-form-btn margin-top-30\"/>\r\n\r\n                <ErrorNotification message={errorMessage} />\r\n            </form>\r\n\r\n            {formSubmitted && <ExerciseForm workoutId={workoutIdParam} />}\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default CreateWorkout;","import { useState } from 'react';\r\n\r\nimport './Year.css'\r\n\r\nconst Year = ({\r\n    year,\r\n    children\r\n}) => {\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    return (\r\n        <div className=\"year-container\">\r\n            <div className=\"year-text-container\" onClick={() => setClicked(!clicked)}>\r\n                <span className=\"year-text\">{year}</span>\r\n                <span className={`year-arrow ${clicked ? 'flip-up' : ''}`}>&#8679;</span>\r\n            </div>\r\n            <div className={`${clicked ? 'year-content-hidden' : ''}`}>{children}</div>\r\n        </div>\r\n    )\r\n}; \r\n\r\nexport default Year;","import { useState } from 'react';\r\n\r\nimport './Month.css';\r\n\r\nconst Month = ({\r\n    month,\r\n    children\r\n}) => {\r\n\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    return (\r\n        <div className=\"month-container\">\r\n            <div className=\"month-text-container\" onClick={() => setClicked(!clicked)}>\r\n                <span className=\"month-text\">{month}</span>\r\n                <span className={`month-arrow ${clicked ? 'flip-up' : ''}`}>&#8679;</span>\r\n            </div>\r\n            <div className={`${clicked ? 'month-content-hidden' : ''}`} >{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Month;","import './Day.css';\r\n\r\nconst Day = ({\r\n    day,\r\n    children\r\n}) => {\r\n    return (\r\n        <div className=\"day-container\">\r\n            <span className={`day-text ${day.includes('Monday') ? 'end-week' : ''}`}>{day}</span>\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Day;","import { useState } from 'react';\r\n\r\nimport './CurrentWorkout.css';\r\n\r\nconst CurrentWorkout = ({\r\n    workout\r\n}) => {\r\n    const [currentExercise, setCurrentExercise] = useState(null);\r\n\r\n    if(!workout) {\r\n        return null;\r\n    } else {\r\n        let date = new Date(workout.date);\r\n        date = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n\r\n        return (\r\n            <form className=\"workout-container\">\r\n                <h1 className=\"workout-container-name\">{workout.workoutName}</h1>\r\n                <h2 className=\"workout-container-date\">{date}</h2>\r\n                <h3 className=\"workout-container-weight\">Weight: {workout.personalWeight}kg</h3>\r\n                <div className=\"workout-exercises-container\">\r\n                    <div className=\"exercises-list-container\">\r\n                        <h2 className=\"exercises-list-heading\">Exercises:</h2>\r\n                        {workout.exercises.map((exercise, index) => {\r\n                            return (\r\n                                <div key={index} className=\"exercise-list-item\">\r\n                                    <span  className=\"exercise-list-item-text\">&#10146; {exercise.name}</span>\r\n                                    <button type=\"button\" onClick={() => setCurrentExercise(workout.exercises[index])} className=\"exercise-list-item-btn\">details</button>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    {currentExercise && <div className=\"current-exercise-container\">\r\n                        <h3 className=\"current-exercise-heading\">{currentExercise.name}</h3>\r\n                        {currentExercise.sets.map((set, index) => (\r\n                            <div key={index + 10} className=\"current-exercise-set-row\">\r\n                                <span className=\"current-exercise-info\">Set {index + 1}:</span>\r\n                                <span className=\"current-exercise-info\">Reps: {set.reps}</span>\r\n                                <span className=\"current-exercise-info\">Weight: {set.weight}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>}\r\n                    \r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n};\r\n\r\nexport default CurrentWorkout;","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getWorkotus } from '../../services/workoutService';\r\n\r\nimport './Workouts.css';\r\n\r\nimport Year from './Year';\r\nimport Month from './Month';\r\nimport Day from './Day';\r\nimport CurrentWorkout from './CurrentWorkout';\r\n\r\nconst Workouts = () => {\r\n\r\n    const [workouts, setWorkouts] = useState([]);\r\n    const [currentWorkout, setCurrentWorkout] = useState(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const userId = JSON.parse(localStorage.getItem('user')).id;\r\n        \r\n        getWorkotus(userId)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const workoutsData = data.workouts;\r\n                setWorkouts(workoutsData)\r\n            });\r\n    }, [])\r\n\r\n    if(!localStorage.getItem('user')) {\r\n        history.push('/');\r\n        return null;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"fade-in workout-component-wrapper\">\r\n            {workouts.length === 0 && <span className=\"empty-message\">No workouts yet!</span>}\r\n\r\n            \r\n            <div className=\"workout-history\">\r\n                {workouts.map(year => {\r\n                    return <Year key={year.year} year={year.year}>\r\n                        {year.months.map(month => {\r\n                            const [monthName, dates] = Object.entries(month)[0];\r\n                            return <Month key={monthName} month={monthName}>\r\n                                {dates.map(date => {\r\n                                    return <Day key={date.date} day={date.date}>\r\n                                        {date.workouts.map(workout => {\r\n                                            return (\r\n                                                <div key={workout._id} className=\"info-container\">\r\n                                                    <h3 className=\"info-workout-name\">{workout.workoutName}</h3>\r\n                                                    <button className=\"info-workout-btn\" onClick={() => setCurrentWorkout(workout)}>Details</button>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </Day>\r\n                                })}\r\n                            </Month> \r\n                        })}\r\n                    </Year>\r\n                })}\r\n            </div>\r\n\r\n            <CurrentWorkout workout={currentWorkout}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Workouts;","import './ChangeInfoForm.css';\r\n\r\nimport { updateData, resetProgress } from '../../../services/authService';\r\nimport { useState } from 'react';\r\n\r\nimport ErrorNotification from '../../ErrorNotification';\r\n\r\nconst ChangeInfoForm = ({\r\n    info,\r\n    handleClose\r\n}) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const [userEmail, setUserEmail] = useState(user.email);\r\n    const [personalInfoObject, setPersonalInfoObject] = useState({\r\n        'weight': user.weight,\r\n        'height': user.height,\r\n        'age': user.age,\r\n    })\r\n\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    if(info === '') {\r\n        return null;\r\n    }\r\n\r\n    const onEmailChangeHandler = e => {\r\n        setUserEmail(e.target.value);\r\n    };\r\n\r\n    const onPersonalInfoChangeHandler = e => {\r\n        let obj = {...personalInfoObject};\r\n        let newObj = {\r\n            [e.target.name]: e.target.value,\r\n        }\r\n\r\n        Object.assign(obj, newObj);\r\n\r\n        setPersonalInfoObject(obj);\r\n    }\r\n\r\n    const email = () => {\r\n        return (\r\n            <input type=\"email\" name=\"email\" value={userEmail} onChange={onEmailChangeHandler} className=\"change-info-input\"/>\r\n        )\r\n\r\n    }\r\n\r\n    const password = () => {\r\n        return (\r\n            <>\r\n            <input type=\"password\" name=\"oldPassword\" placeholder=\"old password here...\" className=\"change-info-input\"/>\r\n            <input type=\"password\" name=\"newPassword\" placeholder=\"new password here...\" className=\"change-info-input\"/>\r\n            <input type=\"password\" name=\"newPasswordRep\" placeholder=\"repeat new password here...\" className=\"change-info-input\"/>\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n    const progress = () => {\r\n            return <h3 className=\"change-form-heading\">Are you sure you want to reset your whole workout progress?</h3>\r\n    }\r\n\r\n    const personalInfo = () => {\r\n        return (\r\n            <>\r\n                <label htmlFor=\"weight\" className=\"change-form-label\">Weight:</label>\r\n                <input type=\"number\" value={personalInfoObject.weight} onChange={onPersonalInfoChangeHandler} name=\"weight\" className=\"change-info-input\"/>\r\n\r\n                <label htmlFor=\"weight\" className=\"change-form-label\">Height:</label>\r\n                <input type=\"number\" value={personalInfoObject.height} onChange={onPersonalInfoChangeHandler} name=\"height\" className=\"change-info-input\"/>\r\n\r\n                <label htmlFor=\"weight\" className=\"change-form-label\">Age:</label>\r\n                <input type=\"number\" value={personalInfoObject.age} onChange={onPersonalInfoChangeHandler} name=\"age\" className=\"change-info-input\"/>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const execObject = {\r\n        'email': email,\r\n        'password': password,\r\n        'progress': progress,\r\n        'personalInfo': personalInfo,\r\n    } \r\n\r\n    const executed = execObject[info];\r\n\r\n    const onChangeFormSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        switch(info) {\r\n            case 'email':\r\n                const email = e.target.email;\r\n                updateData({type: 'email', email: email.value}, user.id)\r\n                    .then(res => {\r\n                        setErrorMessage(null);\r\n                        handleClose();\r\n                    })\r\n                    .catch(err => {\r\n                        setErrorMessage('Something went wrong! Try again!');\r\n                    });\r\n                break;\r\n            case 'password':\r\n                const { oldPassword, newPassword, newPasswordRep } = e.target;\r\n                \r\n                if(newPassword !== newPasswordRep) {\r\n                    setErrorMessage('New passwords doesn\\'t match!')\r\n                }\r\n\r\n                updateData({oldPassword: oldPassword.value, newPassword: newPassword.value, type: 'password'}, user.id)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if(res.type === 'error') {\r\n                            setErrorMessage(res.message.errorMsg);\r\n                        } else {\r\n                            setErrorMessage(null);\r\n                            handleClose();\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        setErrorMessage(err);\r\n                    });\r\n\r\n                break;\r\n\r\n            case 'progress':\r\n                resetProgress(user.id)\r\n                    .then(() => {\r\n                        handleClose();\r\n                    })\r\n                    .catch(err => {\r\n                        setErrorMessage(err);\r\n                    });\r\n                break;\r\n            case 'personalInfo':\r\n                updateData({personalInfoObject, type: 'personalInfo'}, user.id)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if(res.type === 'error') {\r\n                            setErrorMessage(res.message.errorMsg);\r\n                        } else {\r\n                            localStorage.setItem('user', JSON.stringify(res.user));\r\n                            setErrorMessage(null);\r\n                            handleClose();\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        setErrorMessage(err);\r\n                    })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"change-info-form\" onSubmit={onChangeFormSubmit}>\r\n            {executed()}\r\n            <ErrorNotification message={errorMessage}/>\r\n            <input type=\"submit\" value={info === 'progress' ? 'reset' : `change info`} className=\"change-info-btn\" />\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default ChangeInfoForm;","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n \r\nimport './Profile.css';\r\nimport Modal from '../Modal/Modal';\r\nimport ChangeInfoForm from './ChangeInfoForm';\r\n\r\nconst Profile = () => {\r\n    const [modal, setModal] = useState({\r\n        show: false,\r\n        info: '',\r\n    });\r\n\r\n    const userData = JSON.parse(localStorage.getItem('user'));\r\n    const history = useHistory();\r\n\r\n    if(!userData) {\r\n        history.push('/');\r\n        return null;\r\n    }\r\n\r\n    const username = userData.username;\r\n    \r\n    const containerClassName = modal.show ? 'modal-container-show' : 'modal-container-hide';\r\n\r\n    return (\r\n        <div className=\"profile-page-wrapper\">\r\n            <h3 className=\"profile-page-username\">{username} - {userData.weight}kg - {userData.height}cm</h3>\r\n            <div className=\"avatar-container\">\r\n                <img src=\"/avatar.png\" alt=\"avatar\" className=\"user-avatar\"/>\r\n                <button className=\"profile-page-btn\" onClick={() => setModal({show: true, info: 'password'})}>change password</button>\r\n                <button className=\"profile-page-btn\" onClick={() => setModal({show: true, info: 'email'})}>change email</button>\r\n                <button className=\"profile-page-btn\" onClick={() => setModal({show: true, info: 'progress'})}>reset progress</button>\r\n                <button className=\"profile-page-btn\" onClick={() => setModal({show: true, info: 'personalInfo'})}>change profile picture and personal info</button>\r\n            </div>\r\n            <p className=\"profile-page-text\">(hover on the avatar picture)</p>\r\n\r\n            <div className={`modal-container ${containerClassName}`}>\r\n                <Modal show={modal.show} handleClose={() => setModal({show: false, info: ''})}>\r\n                    <ChangeInfoForm info={modal.info} handleClose={() => setModal({show: false, info: ''})} />\r\n                </Modal>\r\n            </div>\r\n\r\n    \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import './App.css';\n\nimport { useState, useEffect } from 'react';\n\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport CreateWorkout from './components/CreateWorkout';\nimport Workouts from './components/Workouts';\nimport Profile from './components/Profile';\n\nimport OpenModalContext from './context/OpenModalContext';\n\nfunction App() {\n    const [loggedIn, setloggedIn] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const history = useHistory();\n\n    const user = localStorage.getItem('user');\n\n    useEffect(() => {\n        if (user) {\n            setloggedIn(true);\n        }\n    }, [user]);\n\n    const handleLogin = bool => {\n        if (bool) {\n            setloggedIn(true);\n        }\n    }\n\n    const handleOpenModal = (bool) => {\n        if (bool) {\n            setOpenModal(bool)\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <Navigation handleOpenModal={handleOpenModal} loggedIn={loggedIn} />\n            <Switch>\n                <Route path=\"/\" exact>\n                    <OpenModalContext.Provider value={{openModal, handleLogin: handleLogin}}>\n                        <Home loggedIn={loggedIn} />\n                    </OpenModalContext.Provider>\n                </Route>\n                <Route path=\"/create-workout\" component={CreateWorkout} />\n                <Route path=\"/my-workouts\" component={Workouts} />\n                <Route path=\"/profile\" component={Profile} />\n                <Route path=\"/logout\">\n                    {() => {\n                        localStorage.removeItem('user');\n                        setloggedIn(false);\n                        history.push('/');\n                        return null;\n                    }}\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}